# -*- coding: utf-8 -*-
"""Tensorflow_TPU_Custom_graphs.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zn-GgWsQ2tHy7hWM4Nd11jqO3fZhfbfe

# How to train Custom graphs on tensorflow TPU

- Note that this uses tf 1.x instead of 2.x
- TPU compatibility isn't fully supported when I made this 19/03/2020

## TPU Basics
"""

# Commented out IPython magic to ensure Python compatibility.
import os
# %tensorflow_version 1.x
import tensorflow as tf
# %load_ext tensorboard

tf.debugging.set_log_device_placement(True)

tf.config.experimental_list_devices()

tpu_add = 'grpc://' + os.environ['COLAB_TPU_ADDR']

resolver = tf.distribute.cluster_resolver.TPUClusterResolver(tpu_add)
tf.config.experimental_connect_to_cluster(resolver)
tf.tpu.experimental.initialize_tpu_system(resolver)
# strategy = tf.distribute.experimental.TPUStrategy(resolver)

a_cpu = tf.constant([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]])
b_cpu = tf.constant([[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]])
c_cpu = tf.matmul(a_cpu, b_cpu)

session = tf.Session()
session.run(c_cpu)

a_tpu = tf.constant([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]])
b_tpu = tf.constant([[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]])
# c_cpu = tf.matmul(a_cpu, b_cpu)

tpu_ops = tf.contrib.tpu.rewrite(tf.matmul, [a_tpu, b_tpu])

session = tf.Session(tpu_add)
session.run(tpu_ops)

"""## How to run custom logistic regression on TPU"""

def lr(x, coefficients, intercept):
    return tf.sigmoid(tf.add(tf.tensordot(x, coefficients, axes=1), intercept))

lr_coefficients = tf.constant([0.3, 0.5, 0.2, 0.1])             # Randomly picked, should be learnt by lr 
lr_intercept = tf.constant([0.4])                               # Randomly picked, should be learnt by lr

input_ = tf.placeholder(tf.float32, None, name="input")

lr_ops = tf.contrib.tpu.rewrite(lr, [input_, lr_coefficients, lr_intercept])

session = tf.Session(tpu_add)

writer = tf.summary.FileWriter('/tmp/graphs', session.graph)

print(session.run(lr_ops, {input_: [0, 1, 1, 1]}))

# Commented out IPython magic to ensure Python compatibility.
# %tensorboard --logdir="/tmp/graphs/"

