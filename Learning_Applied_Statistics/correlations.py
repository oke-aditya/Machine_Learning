# -*- coding: utf-8 -*-
"""Correlations.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/124lq_wmY0vSG6wNF2BU8bBmkfkagzNZb

# Correlations and understanding them

Relationship can be either linear, non linear, monotonic and no relationship. We will also seeing how to assess strength of relationship with examples. We will get idea of polynomials and segmentation

In real world data no two relationship form a straight line. many data is curvy in nature. So let us see how different relationship looks like and get intuition on how best to model it.
"""

import warnings
import pandas as pd
import numpy as np

import matplotlib.pyplot as plt
import seaborn as sns
sns.set()
warnings.simplefilter(action="ignore")

loan_df = pd.read_csv("https://raw.githubusercontent.com/srivatsan88/YouTubeLI/master/dataset/loan_analysis_summary.csv")

loan_df.head()

"""Statistical tests do not conclude anything. We need to apply domain knowledge and context which is related to the dataset. 

This will help us understand the data.
"""

loan_df.describe()

"""# Covariance vs Correlation

Covariance are not standardised values. Range from -infinity to infinity
Correlation is standardise between -1 to 1.

Covariance shows direction of relationship. 

Positive covariance shows positive relationship.
Negatice covariance shows negative rrelationship.
"""

loan_df.cov()

"""## Domain knowledge for correlation

Fico score is like credit score. Describes how risky a customer is.
Lower fico_score more risky cutomer, higher the fico_score more sincere is the customer in repaying.

dti is debt to income ratio amount. How much debt you have against how much do you earn.

int_rate will depend on fico_score.

default rate is how many couldn't repay the loan.

So we can visualize the correlations and add domain knowledge.
dti inversely depends on fico_score

int_rate inversely depends on fico_score

- It is seen that we have correlation between fico_score and annual_inc.
This comes from domain knowledge as well.

- default rate will be higher for people with lower fico_score.

- Also we will have high income with high fico_score.
"""

loan_df.corr()

"""## Pearson vs Spearman

Pearson measures the relationship between linearly related variables. It makes assumption of data to be normally distributed


Spearman is good when relationship is monotonic or ordinal. Monotonic is still linear but the rate of increase between x and y might not be constant.

Spearman is rank_correlation coefficient. So it works better for ordinal data.

It is non-parametric test. It measures relationship between continous and ordinal variables.

Does not assume the underlaying data distribution.
"""

loan_df.corr(method="spearman")

loan_df.corr(method="pearson")

"""# Data Visualization"""

sns.distplot(loan_df['median_annual_inc'], hist=True)

loan_df[['fico_score', 'median_annual_inc']].corr("spearman")

sns.regplot(x="fico_score", y="median_annual_inc", data=loan_df)

loan_df[['fico_score', 'avg_annual_inc']].corr("spearman")

sns.regplot(x="fico_score", y="avg_annual_inc", data=loan_df)

loan_df[['fico_score', 'dti']].corr("spearman")

sns.regplot(x="fico_score", y="dti", data=loan_df)

loan_df[['fico_score', 'int_rate']].corr("spearman")

sns.regplot(x="fico_score", y="int_rate", data=loan_df)

sns.distplot(loan_df["int_rate"], hist=True)

import scipy.stats as stats

stats.probplot(loan_df["int_rate"], dist="norm", plot=plt)

loan_df[['fico_score', 'loan_total']].corr("spearman")

sns.regplot(x="fico_score", y="loan_total", data=loan_df)

loan_df[['fico_score', 'default_rate']].corr("spearman")

sns.regplot(x="fico_score", y="default_rate", data=loan_df)

loan_df[['median_annual_inc', 'loan_total']].corr("spearman")

sns.regplot(x="median_annual_inc", y="loan_total", data=loan_df)

loan_df[['dti', 'loan_total']].corr("spearman")

sns.regplot(x="dti", y="loan_total", data=loan_df)

