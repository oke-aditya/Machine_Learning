# -*- coding: utf-8 -*-
"""AutoViz.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gRq1ZlMpW1ZI7JPWs0BMAc7F9VT8lKsh

# AutoViz

- Automated Visualization framework.
- Created by AutoViML.
[https://github.com/AutoViML/AutoViz](https://github.com/AutoViML/AutoViz)

# Installing
"""

!pip install autoviz

"""# Loading Data

## About the Data

customerID - Customer ID

gender - Whether the customer is a male or a female

SeniorCitizen - Whether the customer is a senior citizen or not (1, 0)

Partner - Whether the customer has a partner or not (Yes, No)

Dependents - Whether the customer has dependents or not (Yes, No)

tenure - Number of months the customer has stayed with the company

PhoneService - Whether the customer has a phone service or not (Yes, No)

MultipleLines - Whether the customer has multiple lines or not (Yes, No, No phone service)

InternetService - Customer’s internet service provider (DSL, Fiber optic, No)

OnlineSecurity - Whether the customer has online security or not (Yes, No, No internet service)

OnlineBackup - Whether the customer has online backup or not (Yes, No, No internet service)

DeviceProtection - Whether the customer has device protection or not (Yes, No, No internet service)

TechSupport - Whether the customer has tech support or not (Yes, No, No internet service)

StreamingTV - Whether the customer has streaming TV or not (Yes, No, No internet service)

StreamingMovies - Whether the customer has streaming movies or not (Yes, No, No internet service)

Contract - The contract term of the customer (Month-to-month, One year, Two year)

PaperlessBilling - Whether the customer has paperless billing or not (Yes, No)

PaymentMethod - The customer’s payment method (Electronic check, Mailed check, Bank transfer (automatic), Credit card (automatic))

MonthlyCharges - The amount charged to the customer monthly

TotalCharges - The total amount charged to the customer

Churn - Whether the customer churned or not (Yes or No)

## Loading it
"""

import sys,tempfile, urllib, os
import pandas as pd
import numpy as np

BASE_DIR = '/tmp'
OUTPUT_FILE = os.path.join(BASE_DIR, 'churn_data.csv')

churn_data=urllib.request.urlretrieve('https://raw.githubusercontent.com/srivatsan88/YouTubeLI/master/dataset/WA_Fn-UseC_-Telco-Customer-Churn.csv', OUTPUT_FILE)

churn_master_df = pd.read_csv(OUTPUT_FILE)

churn_df = churn_master_df

churn_df.head()

churn_df.replace(r'^\s*$', np.nan, regex=True).isna().sum()

churn_df = churn_df.replace(r'^\s*$', np.nan, regex=True)

print ("Rows     : " ,churn_df.shape[0])
print ("Columns  : " ,churn_df.shape[1])
print ("\nFeatures : \n" ,churn_df.columns.tolist())
print ("\nMissing values :  ", churn_df.isnull().any())
print ("\nUnique values :  \n",churn_df.nunique())

"""# Time to use AutoViz"""

from autoviz.AutoViz_Class import AutoViz_Class

av = AutoViz_Class()

# not giving the dependent variable first
# This gives us analysis of each individual variable.
dft = av.AutoViz("/tmp/churn_data.csv", sep=',', depVar='', header=1, verbose=1, lowess=False, chart_format='svg',
max_rows_analyzed=7500, max_cols_analyzed=50)

dft = av.AutoViz("/tmp/churn_data.csv", sep=',', depVar='Churn', header=1, verbose=1, lowess=False, chart_format='svg',
                 max_rows_analyzed=7500, max_cols_analyzed=50)